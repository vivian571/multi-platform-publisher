# 多平台内容发布工具配置示例
# 复制此文件为 config.yaml 并根据需要修改

# 路径配置
paths:
  watch_dir: ${WATCH_DIR:-./documents}  # 监控的文档目录
  image_dir: ${IMAGE_DIR:-./images}     # 图片目录
  published_dir: ${PUBLISHED_DIR:-./published}  # 已发布文章备份目录

# 账户配置
# 每个账户对应一个发布平台
accounts:
  # 账户名应与 watch_dir 中的子目录名对应
  AI流习社:
    platform: wechat
    app_id: ${WECHAT_ACCOUNT_AI流习社_APP_ID}
    app_secret: ${WECHAT_ACCOUNT_AI流习社_APP_SECRET}
    author: "AI流习社"

  开源智核:
    platform: wechat
    app_id: ${WECHAT_ACCOUNT_开源智核_APP_ID}
    app_secret: ${WECHAT_ACCOUNT_开源智核_APP_SECRET}
    author: "开源智核"

  码趣逻辑站:
    platform: wechat
    app_id: ${WECHAT_ACCOUNT_码趣逻辑站_APP_ID}
    app_secret: ${WECHAT_ACCOUNT_码趣逻辑站_APP_SECRET}
    author: "码趣逻辑站"

  CSDN博客:
    platform: csdn
    username: ${CSDN_USERNAME}       # CSDN登录账号
    password: ${CSDN_PASSWORD}       # CSDN登录密码
    author: "技术达人"
    categories: ["后端开发", "Python"]  # 文章分类
    tags: ["技术", "编程", "教程"]      # 文章标签
    
  # 头条号
  技术头条:
    platform: toutiao
    username: ${TOUTIAO_USERNAME}
    password: ${TOUTIAO_PASSWORD}
    author: "技术小编"
    
  # 知乎专栏
  技术专栏:
    platform: zhihu
    email: ${ZHIHU_EMAIL}
    password: ${ZHIHU_PASSWORD}
    author: "技术作者"

# 监控配置
watch:
  recursive: true  # 是否递归监控子目录
  file_types: [".md", ".markdown"]  # 监控的文件类型

# 全局发布配置
publish:
  default_author: "自动发布"  # 默认作者，如果文章中没有指定作者
  show_cover: true          # 是否显示封面图
  move_on_success: "all"  # 何时移动文件: "all" (所有平台成功) 或 "any" (任意一个平台成功)
  
# 日志配置
logging:
  level: "INFO"  # 日志级别: DEBUG, INFO, WARNING, ERROR, CRITICAL
  file: "publisher.log"  # 日志文件路径，为空则只输出到控制台
